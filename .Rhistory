superheat(Array_Stats, col.dendrogram = F, heat.pal = c("darkslateblue", "darkolivegreen0"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("darkslateblue", "darkolivegreen2"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("darkslateblue", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("darkslateblue", "darkolivegreen4"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("darkslateblue", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("purple4", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
darkslateblue
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("darkslateblue", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("darkslateblue1", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("darkslateblue2", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("royalblue4", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("slateblue4", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("royalblue4", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("steelblue4", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
royalblue4
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("royalblue4", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("royalblue3", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("royalblue0", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("royalblue1", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("royalblue3", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("royalblue5", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("royalblue4", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("royalblue4", "darkolivegreen4"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("royalblue4", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("royalblue4", "darkolivegreen2"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("royalblue4", "darkolivegreen4"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("royalblue4", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("royalblue4", "chartreuse4"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("royalblue4", "darkolivegreen"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("royalblue4", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("white", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("royalblue4", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("gray0", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("royalblue4", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("royalblue4", "darkolivegreen3"), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the array dataset")
pdf("./Figs/Heatmaps/SuppFigure2.pdf", width = 10, height = 9, onefile = F)
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("royalblue4", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 2, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap of the TSPs votes in the array dataset")
dev.off()
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("royalblue4", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 2, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap of the TSPs votes in the array dataset")
ktspStatsTCGA <- SWAP.KTSP.Statistics(
inputMat = tcgaMat,
classifier = tcgaKTSP,
CombineFunc = sum)
TCGA_Stats <- ktspStatsTCGA$comparisons
TCGA_Stats <- TCGA_Stats*1
# Order the stats by the sum of votes
NewOrder <- order(rowSums(TCGA_Stats))
TCGA_Stats <- TCGA_Stats[NewOrder, ]
# Order the true class labels
tcgaGroup <- tcgaGroup[NewOrder]
# Get the predicted class labels
PredClass <- ifelse(rowSums(TCGA_Stats) >= 3, "NEG", "POS")
PredClass <- factor(PredClass, levels = c("POS", "NEG"))
#X <- X[NewOrder]
levels(PredClass) <- c("red", "blue")
# Check order
all(rownames(TCGA_Stats) == names(PredClass)) # TRUE:: No Need to order them (Already ordered by sum of votes)
superheat(TCGA_Stats, col.dendrogram = F, heat.pal = c("royalblue4", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(TCGA_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = tcgaGroup, bottom.label.text.size = 2, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the TCGA dataset")
ktspStatsTCGA <- SWAP.KTSP.Statistics(
inputMat = tcgaMat,
classifier = tcgaKTSP,
CombineFunc = sum)
TCGA_Stats <- ktspStatsTCGA$comparisons
TCGA_Stats <- TCGA_Stats*1
# Order the stats by the sum of votes
NewOrder <- order(rowSums(TCGA_Stats))
TCGA_Stats <- TCGA_Stats[NewOrder, ]
# Order the true class labels
tcgaGroup <- tcgaGroup[NewOrder]
# Get the predicted class labels
PredClass <- ifelse(rowSums(TCGA_Stats) >= 3, "NEG", "POS")
PredClass <- factor(PredClass, levels = c("POS", "NEG"))
#X <- X[NewOrder]
levels(PredClass) <- c("red", "blue")
# Check order
all(rownames(TCGA_Stats) == names(PredClass)) # TRUE:: No Need to order them (Already ordered by sum of votes)
superheat(TCGA_Stats, col.dendrogram = F, heat.pal.values = c(0, 1), yr = rowSums(TCGA_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = tcgaGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the TCGA dataset")
superheat(TCGA_Stats, col.dendrogram = F, heat.pal = c("royalblue4", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(TCGA_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = tcgaGroup, bottom.label.text.size = 2, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the TCGA dataset")
rm(list = ls())
## Load the 2 classifiers and data
load("./Objs/FinalClassifiers.rda")
ktspStatsTCGA <- SWAP.KTSP.Statistics(
inputMat = tcgaMat,
classifier = tcgaKTSP,
CombineFunc = sum)
TCGA_Stats <- ktspStatsTCGA$comparisons
TCGA_Stats <- TCGA_Stats*1
# Order the stats by the sum of votes
NewOrder <- order(rowSums(TCGA_Stats))
TCGA_Stats <- TCGA_Stats[NewOrder, ]
# Order the true class labels
tcgaGroup <- tcgaGroup[NewOrder]
# Get the predicted class labels
PredClass <- ifelse(rowSums(TCGA_Stats) >= 3, "NEG", "POS")
PredClass <- factor(PredClass, levels = c("POS", "NEG"))
#X <- X[NewOrder]
levels(PredClass) <- c("red", "blue")
# Check order
all(rownames(TCGA_Stats) == names(PredClass)) # TRUE:: No Need to order them (Already ordered by sum of votes)
superheat(TCGA_Stats, col.dendrogram = F, heat.pal.values = c(0, 1), yr = rowSums(TCGA_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = tcgaGroup, bottom.label.text.size = 3.5, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the TCGA dataset")
superheat(TCGA_Stats, col.dendrogram = F, heat.pal = c("royalblue4", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(TCGA_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = tcgaGroup, bottom.label.text.size = 2, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the TCGA dataset")
pdf("./Figs/Heatmaps/SuppFigure3.pdf", width = 10, height = 9, onefile = F)
superheat(TCGA_Stats, col.dendrogram = F, heat.pal = c("royalblue4", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(TCGA_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = tcgaGroup, bottom.label.text.size = 2, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the TCGA dataset")
dev.off()
########
pcrData <- read.delim("./Data/RT_PCR/deltaCt.txt")
# Get the node status
pcrGroup <- pcrData$NodeStatus
table(pcrGroup)
# Rename the groups from 0,1 to neg,pos
pcrGroup[pcrGroup == 0] <- "NEG"
pcrGroup[pcrGroup == 1] <- "POS"
pcrGroup <- factor(pcrGroup, levels = c("POS", "NEG"))
# Get the matrix
pcrMat <- pcrData[, -14]
rownames(pcrMat) <- pcrMat$SampleName
pcrMat$SampleName <- NULL
# Transpose the matrix
pcrMat <- t(pcrMat)
# One gene is misspelled, rename it
rownames(pcrMat)[rownames(pcrMat) == "TFGB2"] <- "TGFB2"
# Get the prediction stats
ktspStatsPCR <- SWAP.KTSP.Statistics(
inputMat = pcrMat,
classifier = tcgaKTSP,
CombineFunc = sum)
PCR_Stats <- ktspStatsPCR$comparisons
PCR_Stats <- PCR_Stats*1
# Order the stats by the sum of votes
NewOrder <- order(rowSums(PCR_Stats))
PCR_Stats <- PCR_Stats[NewOrder, ]
# Order the true class labels
pcrGroup <- pcrGroup[NewOrder]
# Get the predicted class labels
PredClass <- ifelse(rowSums(PCR_Stats) >= 3, "NEG", "POS")
PredClass <- factor(PredClass, levels = c("POS", "NEG"))
#X <- X[NewOrder]
levels(PredClass) <- c("red", "blue")
# Check order
all(rownames(PCR_Stats) == names(PredClass)) # TRUE:: No Need to order them (Already ordered by sum of votes)
superheat(PCR_Stats, col.dendrogram = F,  heat.pal = c("royalblue4", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(PCR_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = pcrGroup, bottom.label.text.size = 2, yr.num.ticks = 4, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the PCR (Testing) dataset")
pdf("./Figs/Heatmaps/Figure1.pdf", width = 10, height = 9, onefile = F)
superheat(PCR_Stats, col.dendrogram = F,  heat.pal = c("royalblue4", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(PCR_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = pcrGroup, bottom.label.text.size = 2, yr.num.ticks = 4, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the PCR (Testing) dataset")
dev.off()
# Get the stats
ktspStatsArray <- SWAP.KTSP.Statistics(
inputMat = ArrayMat,
classifier = ArrayKTSP,
CombineFunc = sum)
ktspStatsTCGA <- SWAP.KTSP.Statistics(
inputMat = tcgaMat,
classifier = tcgaKTSP,
CombineFunc = sum)
ktspStatsPCR <- SWAP.KTSP.Statistics(
inputMat = pcrMat,
classifier = ArrayKTSP,
CombineFunc = sum)
forLegend_Train <- apply(rbind(
ci(roc(ArrayGroup, ktspStatsArray$statistics, levels = c("NEG", "POS"), direction = ">")),
ci(roc(tcgaGroup, ktspStatsTCGA$statistics, levels = c("NEG", "POS"), direction = ">")),
),  1, function(x) {
x <- format(round(x, digits=2), nsmall=2)
paste("AUC: ", x[[2]], ";", "95% CI: ", x[[1]], "-", x[[3]])
})
forLegend_Train <- apply(rbind(
ci(roc(ArrayGroup, ktspStatsArray$statistics, levels = c("NEG", "POS"), direction = ">")),
ci(roc(tcgaGroup, ktspStatsTCGA$statistics, levels = c("NEG", "POS"), direction = ">"))
),  1, function(x) {
x <- format(round(x, digits=2), nsmall=2)
paste("AUC: ", x[[2]], ";", "95% CI: ", x[[1]], "-", x[[3]])
})
forLegend_Train
forLegend_Test <- apply(rbind(
ci(roc(pcrGroup, ktspStatsPCR$statistics, levels = c("NEG", "POS"), direction = ">"))
),  1, function(x) {
x <- format(round(x, digits=2), nsmall=2)
paste("AUC: ", x[[2]], ";", "95% CI: ", x[[1]], "-", x[[3]])
})
forLegend_Test <- apply(rbind(
ci(roc(pcrGroup, ktspStatsPCR$statistics, levels = c("NEG", "POS"), direction = ">"))
),  1, function(x) {
x <- format(round(x, digits=2), nsmall=2)
paste("AUC: ", x[[2]], ";", "95% CI: ", x[[1]], "-", x[[3]])
})
datArray_KTSP <- melt(data.frame(
## Training Group
ArrayGroup= factor(ArrayGroup, levels = c("NEG", "POS")),
## Mechanistic KTSP SUM training
ktspStatsArray= ktspStatsArray$statistics))
### Change Colnames
colnames(datArray_KTSP) <- c("Status", "Dataset", "KTSP_sum")
### Testing
datTcga_KTSP <- melt(data.frame(
## Testing group
Testing= factor(tcgaGroup, levels = c("NEG", "POS")),
## Mechanistic KTSP SUM training
ktspStatsTCGA=ktspStatsTCGA$statistics))
### Change Colnames
colnames(datTcga_KTSP) <- c("Status", "Dataset", "KTSP_sum")
datPCR_KTSP <- melt(data.frame(
## Testing group
Testing= factor(pcrGroup, levels = c("NEG", "POS")),
## Mechanistic KTSP SUM training
ktspStatsPCR=ktspStatsPCR$statistics))
### Change Colnames
colnames(datPCR_KTSP) <- c("Status", "Dataset", "KTSP_sum")
### Combine
dat_KTSP_Train <- rbind(datArray_KTSP, datTcga_KTSP)
dat_KTSP_Train$Status <- as.numeric(dat_KTSP_Train$Status)-1
### Testing
datPCR_KTSP <- melt(data.frame(
## Testing group
Testing= factor(pcrGroup, levels = c("NEG", "POS")),
## Mechanistic KTSP SUM training
ktspStatsPCR=ktspStatsPCR$statistics))
### Change Colnames
colnames(datPCR_KTSP) <- c("Status", "Dataset", "KTSP_sum")
### Combine
datPCR_KTSP$Status <- as.numeric(datPCR_KTSP$Status)-1
### Replace levels
levels(dat_KTSP_Train$Dataset) <- c("Training (Array)", "Training (TCGA)")
levels(dat_KTSP_Train$Dataset) <- paste(levels(dat_KTSP_Train$Dataset), forLegend_Train)
levels(datPCR_KTSP$Dataset)
levels(datPCR_KTSP$Dataset) <- c("Testing (RT-PCR)")
levels(datPCR_KTSP$Dataset) <- paste(levels(datPCR_KTSP$Dataset), forLegend_Test)
levels(datPCR_KTSP$Dataset)
ktspStatsPCR <- SWAP.KTSP.Statistics(
inputMat = pcrMat,
classifier = ArrayKTSP,
CombineFunc = sum)
forLegend_Test <- apply(rbind(
ci(roc(pcrGroup, ktspStatsPCR$statistics, levels = c("NEG", "POS"), direction = ">"))
),  1, function(x) {
x <- format(round(x, digits=2), nsmall=2)
paste("AUC: ", x[[2]], ";", "95% CI: ", x[[1]], "-", x[[3]])
})
forLegend_Test
pcrData <- read.delim("./Data/RT_PCR/deltaCt.txt")
# Get the node status
pcrGroup <- pcrData$NodeStatus
table(pcrGroup)
# Rename the groups from 0,1 to neg,pos
pcrGroup[pcrGroup == 0] <- "NEG"
pcrGroup[pcrGroup == 1] <- "POS"
pcrGroup <- factor(pcrGroup, levels = c("POS", "NEG"))
# Get the matrix
pcrMat <- pcrData[, -14]
rownames(pcrMat) <- pcrMat$SampleName
pcrMat$SampleName <- NULL
# Transpose the matrix
pcrMat <- t(pcrMat)
# One gene is misspelled, rename it
rownames(pcrMat)[rownames(pcrMat) == "TFGB2"] <- "TGFB2"
# Get the prediction stats
ktspStatsPCR <- SWAP.KTSP.Statistics(
inputMat = pcrMat,
classifier = tcgaKTSP,
CombineFunc = sum)
datPCR_KTSP <- melt(data.frame(
## Testing group
Testing= factor(pcrGroup, levels = c("NEG", "POS")),
## Mechanistic KTSP SUM training
ktspStatsPCR=ktspStatsPCR$statistics))
### Change Colnames
colnames(datPCR_KTSP) <- c("Status", "Dataset", "KTSP_sum")
### Combine
datPCR_KTSP$Status <- as.numeric(datPCR_KTSP$Status)-1
forLegend_Test <- apply(rbind(
ci(roc(pcrGroup, ktspStatsPCR$statistics, levels = c("NEG", "POS"), direction = ">"))
),  1, function(x) {
x <- format(round(x, digits=2), nsmall=2)
paste("AUC: ", x[[2]], ";", "95% CI: ", x[[1]], "-", x[[3]])
})
#######
forLegend_Test
levels(datPCR_KTSP$Dataset) <- c("Testing (RT-PCR)")
levels(datPCR_KTSP$Dataset) <- paste(levels(datPCR_KTSP$Dataset), forLegend_Test)
levels(datPCR_KTSP$Dataset)
### Color
myCol <- brewer.pal(3, "Dark2")[c(2,1)]
### Plot and legend titles
plotTitle <- "K-TSP Performance in the training datasets"
#legendTitle <- "Dataset"
### Plot
basicplot_KTSP <- ggplot(dat_KTSP_Train, aes(d=Status, m=KTSP_sum, color=Dataset,
linetype = Dataset)) +
geom_roc(increasing = F) +
style_roc(theme = theme_grey) + ggtitle(plotTitle) +
theme(plot.title = element_text(face="bold", size=16, hjust = 0.5),
axis.text=element_text(face="plain", size = 11),
axis.title=element_text(face="bold", size = 13),
legend.justification=c(1,0),  legend.position=c(1,0),
legend.background=element_rect(fill="lightblue1"),
legend.text=element_text(face="plain", size = 10),
legend.title = element_text(face="bold", size=12)) +
scale_color_manual(values = c("darkred", "darkred", "darkblue")) +
#scale_color_manual(legendTitle, values=rep(myCol, 2)) +
scale_linetype_manual(values=c("solid", "solid", "solid")) +
guides(colour = guide_legend(override.aes = list(size=3)))
### Plot
basicplot_KTSP
ktspStatsTCGA <- SWAP.KTSP.Statistics(
inputMat = tcgaMat,
classifier = tcgaKTSP,
CombineFunc = sum)
ktspStatsTCGA <- SWAP.KTSP.Statistics(
inputMat = tcgaMat,
classifier = tcgaKTSP,
CombineFunc = sum)
ktspStatsTCGA
### Prepare the legend
forLegend_Train <- apply(rbind(
ci(roc(ArrayGroup, ktspStatsArray$statistics, levels = c("NEG", "POS"), direction = ">")),
ci(roc(tcgaGroup, ktspStatsTCGA$statistics, levels = c("NEG", "POS"), direction = ">"))
),  1, function(x) {
x <- format(round(x, digits=2), nsmall=2)
paste("AUC: ", x[[2]], ";", "95% CI: ", x[[1]], "-", x[[3]])
})
forLegend_Train
## Load the 2 classifiers and data
load("./Objs/FinalClassifiers.rda")
########
## 2- TCGA
# Get the prediction stats
ktspStatsTCGA <- SWAP.KTSP.Statistics(
inputMat = tcgaMat,
classifier = tcgaKTSP,
CombineFunc = sum)
ktspStatsTCGA <- SWAP.KTSP.Statistics(
inputMat = tcgaMat,
classifier = tcgaKTSP,
CombineFunc = sum)
### Prepare the legend
forLegend_Train <- apply(rbind(
ci(roc(ArrayGroup, ktspStatsArray$statistics, levels = c("NEG", "POS"), direction = ">")),
ci(roc(tcgaGroup, ktspStatsTCGA$statistics, levels = c("NEG", "POS"), direction = ">"))
),  1, function(x) {
x <- format(round(x, digits=2), nsmall=2)
paste("AUC: ", x[[2]], ";", "95% CI: ", x[[1]], "-", x[[3]])
})
forLegend_Train
datArray_KTSP <- melt(data.frame(
## Training Group
ArrayGroup= factor(ArrayGroup, levels = c("NEG", "POS")),
## Mechanistic KTSP SUM training
ktspStatsArray= ktspStatsArray$statistics))
### Change Colnames
colnames(datArray_KTSP) <- c("Status", "Dataset", "KTSP_sum")
### Training2
datTcga_KTSP <- melt(data.frame(
## Testing group
Testing= factor(tcgaGroup, levels = c("NEG", "POS")),
## Mechanistic KTSP SUM training
ktspStatsTCGA=ktspStatsTCGA$statistics))
### Change Colnames
colnames(datTcga_KTSP) <- c("Status", "Dataset", "KTSP_sum")
### Combine
dat_KTSP_Train <- rbind(datArray_KTSP, datTcga_KTSP)
dat_KTSP_Train$Status <- as.numeric(dat_KTSP_Train$Status)-1
### Replace levels
levels(dat_KTSP_Train$Dataset) <- c("Training (Array)", "Training (TCGA)")
levels(dat_KTSP_Train$Dataset) <- paste(levels(dat_KTSP_Train$Dataset), forLegend_Train)
levels(dat_KTSP_Train$Dataset)
#legendTitle <- "Dataset"
### Plot
basicplot_KTSP <- ggplot(dat_KTSP_Train, aes(d=Status, m=KTSP_sum, color=Dataset,
linetype = Dataset)) +
geom_roc(increasing = F) +
style_roc(theme = theme_grey) + ggtitle(plotTitle) +
theme(plot.title = element_text(face="bold", size=16, hjust = 0.5),
axis.text=element_text(face="plain", size = 11),
axis.title=element_text(face="bold", size = 13),
legend.justification=c(1,0),  legend.position=c(1,0),
legend.background=element_rect(fill="lightblue1"),
legend.text=element_text(face="plain", size = 10),
legend.title = element_text(face="bold", size=12)) +
#scale_color_manual(values = c("darkred", "darkblue")) +
#scale_color_manual(legendTitle, values=rep(myCol, 2)) +
scale_linetype_manual(values=c("solid", "solid", "solid")) +
guides(colour = guide_legend(override.aes = list(size=3)))
### Plot
basicplot_KTSP
#legendTitle <- "Dataset"
### Plot
basicplot_KTSP <- ggplot(dat_KTSP_Train, aes(d=Status, m=KTSP_sum, color=Dataset,
linetype = Dataset)) +
geom_roc(increasing = F) +
style_roc(theme = theme_grey) + ggtitle(plotTitle) +
theme(plot.title = element_text(face="bold", size=16, hjust = 0.5),
axis.text=element_text(face="plain", size = 11),
axis.title=element_text(face="bold", size = 13),
legend.justification=c(1,0),  legend.position=c(1,0),
legend.background=element_rect(fill="lightblue1"),
legend.text=element_text(face="plain", size = 10),
legend.title = element_text(face="bold", size=12)) +
scale_color_manual(values = c("darkred", "darkblue")) +
#scale_color_manual(legendTitle, values=rep(myCol, 2)) +
scale_linetype_manual(values=c("solid", "solid", "solid")) +
guides(colour = guide_legend(override.aes = list(size=3)))
### Plot
basicplot_KTSP
pdf("./Figs/Heatmaps/Figure1.pdf", width = 10, height = 9, onefile = F)
basicplot_KTSP
dev.off()
### Color
myCol <- brewer.pal(3, "Dark2")[c(2,1)]
### Plot and legend titles
plotTitle <- "K-TSP Performance in the RT-PCR dataset"
#legendTitle <- "Dataset"
### Plot
basicplot_KTSP <- ggplot(datPCR_KTSP, aes(d=Status, m=KTSP_sum, color=Dataset,
linetype = Dataset)) +
geom_roc(increasing = F) +
style_roc(theme = theme_grey) + ggtitle(plotTitle) +
theme(plot.title = element_text(face="bold", size=16, hjust = 0.5),
axis.text=element_text(face="plain", size = 11),
axis.title=element_text(face="bold", size = 13),
legend.justification=c(1,0),  legend.position=c(1,0),
legend.background=element_rect(fill="lightblue1"),
legend.text=element_text(face="plain", size = 10),
legend.title = element_text(face="bold", size=12)) +
#scale_color_manual(values = c("darkred", "darkblue")) +
#scale_color_manual(legendTitle, values=rep(myCol, 2)) +
scale_linetype_manual(values=c("solid", "solid", "solid")) +
guides(colour = guide_legend(override.aes = list(size=3)))
### Plot
basicplot_KTSP
#legendTitle <- "Dataset"
### Plot
basicplot_KTSP <- ggplot(datPCR_KTSP, aes(d=Status, m=KTSP_sum, color=Dataset,
linetype = Dataset)) +
geom_roc(increasing = F) +
style_roc(theme = theme_grey) + ggtitle(plotTitle) +
theme(plot.title = element_text(face="bold", size=16, hjust = 0.5),
axis.text=element_text(face="plain", size = 11),
axis.title=element_text(face="bold", size = 13),
legend.justification=c(1,0),  legend.position=c(1,0),
legend.background=element_rect(fill="lightblue1"),
legend.text=element_text(face="plain", size = 10),
legend.title = element_text(face="bold", size=12)) +
scale_color_manual(values = c("darkgreen")) +
#scale_color_manual(legendTitle, values=rep(myCol, 2)) +
scale_linetype_manual(values=c("solid", "solid", "solid")) +
guides(colour = guide_legend(override.aes = list(size=3)))
### Plot
basicplot_KTSP
#legendTitle <- "Dataset"
### Plot
basicplot_PCR <- ggplot(datPCR_KTSP, aes(d=Status, m=KTSP_sum, color=Dataset,
linetype = Dataset)) +
geom_roc(increasing = F) +
style_roc(theme = theme_grey) + ggtitle(plotTitle) +
theme(plot.title = element_text(face="bold", size=16, hjust = 0.5),
axis.text=element_text(face="plain", size = 11),
axis.title=element_text(face="bold", size = 13),
legend.justification=c(1,0),  legend.position=c(1,0),
legend.background=element_rect(fill="lightblue1"),
legend.text=element_text(face="plain", size = 10),
legend.title = element_text(face="bold", size=12)) +
scale_color_manual(values = c("darkgreen")) +
#scale_color_manual(legendTitle, values=rep(myCol, 2)) +
scale_linetype_manual(values=c("solid", "solid", "solid")) +
guides(colour = guide_legend(override.aes = list(size=3)))
### Plot
basicplot_PCR
pdf("./Figs/Heatmaps/Figure3.pdf", width = 10, height = 9, onefile = F)
basicplot_PCR
dev.off()
## Load the 2 classifiers and data
load("./Objs/FinalClassifiers.rda")
ktspStatsArray <- SWAP.KTSP.Statistics(
inputMat = ArrayMat,
classifier = ArrayKTSP,
CombineFunc = sum)
Array_Stats <- ktspStatsArray$comparisons
Array_Stats <- Array_Stats*1
# Order the stats by the sum of votes
NewOrder <- order(rowSums(Array_Stats))
Array_Stats <- Array_Stats[NewOrder, ]
#GroupCol <- ArrayGroup[NewOrder]
#levels(GroupCol) <- c("red", "blue")
# Order the true class labels
ArrayGroup <- ArrayGroup[NewOrder]
# Get the predicted class labels
PredClass <- ifelse(rowSums(Array_Stats) >= 3, "NEG", "POS")
PredClass <- factor(PredClass, levels = c("POS", "NEG"))
levels(PredClass) <- c("red", "blue")
# Check order
all(rownames(Array_Stats) == names(PredClass)) # TRUE:: No Need to order them (Already ordered by sum of votes)
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("royalblue4", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 2, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap of the TSPs votes in the array dataset")
pdf("./Figs/Heatmaps/SuppFigure2.pdf", width = 10, height = 9, onefile = F)
superheat(Array_Stats, col.dendrogram = F, heat.pal = c("royalblue4", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(Array_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = ArrayGroup, bottom.label.text.size = 2, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap of the TSPs votes in the array dataset")
dev.off()
ktspStatsTCGA <- SWAP.KTSP.Statistics(
inputMat = tcgaMat,
classifier = tcgaKTSP,
CombineFunc = sum)
TCGA_Stats <- ktspStatsTCGA$comparisons
TCGA_Stats <- TCGA_Stats*1
# Order the stats by the sum of votes
NewOrder <- order(rowSums(TCGA_Stats))
TCGA_Stats <- TCGA_Stats[NewOrder, ]
# Order the true class labels
tcgaGroup <- tcgaGroup[NewOrder]
# Get the predicted class labels
PredClass <- ifelse(rowSums(TCGA_Stats) >= 3, "NEG", "POS")
PredClass <- factor(PredClass, levels = c("POS", "NEG"))
#X <- X[NewOrder]
levels(PredClass) <- c("red", "blue")
# Check order
all(rownames(TCGA_Stats) == names(PredClass)) # TRUE:: No Need to order them (Already ordered by sum of votes)
superheat(TCGA_Stats, col.dendrogram = F, heat.pal = c("royalblue4", "darkolivegreen3"), heat.pal.values = c(0, 1), yr = rowSums(TCGA_Stats), yr.plot.type  = "bar", left.label.text.col = c("red", "blue"), membership.rows = tcgaGroup, bottom.label.text.size = 2, yr.num.ticks = 6, yr.axis.name	= "Sum of votes", yr.obs.col = PredClass, title = "Heatmap for the TSPs votes in the TCGA dataset")
